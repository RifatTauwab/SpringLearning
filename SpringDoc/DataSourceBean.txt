to create DataSource object using bean , 

1. enable JNDI sql configuration 

suppose we have below configuration in context.xml

<Resource name="jdbc/spring" auth="Container" type="javax.sql.DataSource"
    maxTotal="100" maxIdle="30" maxWaitMillis="10000"
    username="root" password="password" driverClassName="com.mysql.jdbc.Driver"
    url="jdbc:mysql://localhost:3306/springtutorial"/>

here name="jdbc/spring" (we can named it according to our choice) is very important as 
our project will search the connection by looking up using this name 

and below configuration for project web.xml

  <description>MySQL Database Connection</description>
  <resource-ref>
      <description>DB Connection</description>
      <res-ref-name>jdbc/spring</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
  </resource-ref>

2. now if our doa-context.xml is bean config file , then open it , enable "jee" namespace
3. from "jee" ,enable <jee:jndi-lookup>, give id = dataSource, "name= jdbc/spring and", "expected-type= javax.sql.DataSource"
name must be the same as previous config "name= jdbc/spring" 

bean config file like this
 
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	...............................................
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

     
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.spring.web.dao"></context:component-scan>
	<jee:jndi-lookup jndi-name="jdbc/spring" id="dataSource"
		expected-type="javax.sql.DataSource">
	</jee:jndi-lookup>
</beans>

Thus we can create DataSource bean